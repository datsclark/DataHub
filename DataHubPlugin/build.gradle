version = '1.0.0'

ext {
  raptureVersion = '3.0.4'
}

apply plugin: 'java'
apply plugin: 'application'

mainClassName = "rapture.plugin.app.SelfInstaller"

repositories {
  mavenLocal()
  mavenCentral()
}

dependencies {
  compile 'org.apache.spark:spark-core_2.11:2.0.0-preview'
  compile 'org.apache.spark:spark-sql_2.11:2.0.0-preview'
  compile "net.rapture:SelfPluginInstallerLib:$raptureVersion"
  compile 'org.apache.commons:commons-csv:1.4'
  compile 'com.rapture:DataHubCommon:1.0.0'
  compile 'com.google.code.gson:gson:2.7'
}
  
task javaCodeJar(type: Jar) {
  baseName = 'DataHubWorkflows'
  destinationDir = file("$buildDir/libs")
  from sourceSets.main.output
  exclude 'PLUGIN'
}

jar {
  dependsOn javaCodeJar
  include 'PLUGIN/**'
  into ('PLUGIN/content/workflows') {
    from ("$buildDir/libs") {
      exclude "DataHubPlugin-${version}.jar"
      include "*.jar"
    } 
  }
}

startScripts {
  classpath = files(['[REPLACEME]'])
  doLast {
    // gradle always puts extra classpaths relative to the lib folder, so we have to replace
    windowsScript.text = windowsScript.text.replace('%APP_HOME%\\lib\\[REPLACEME]', '%APP_HOME%\\lib\\*;%APP_HOME%\\etc')
    unixScript.text = unixScript.text.replace('$APP_HOME/lib/[REPLACEME]', '$APP_HOME/lib/*:$APP_HOME/etc')
  }
}
